/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import Salpicadero.*;
import Salpicadero.EstadoMotor;
import Salpicadero.GestorFiltros;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.util.Random;
/**
 *
 * @author agus
 */
public class SPMT extends javax.swing.JApplet { 
    private GestorFiltros g = new GestorFiltros();
    private boolean activado = false;
    private boolean mantener = false;
    private boolean reiniciar = false;
    private double velocidad_almacenada = 0.0;
    private boolean alcanzado1, alcanzado2 = false;
    private double gasolina;
    /**
     * Initializes the applet SPMT
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SPMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SPMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SPMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SPMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold
        /* Create and display the applet */
        Random r = new Random();
        this.gasolina = r.nextInt(101)+1;
        this.setSize(900, 600);

        g.s.setGasolina(gasolina);
        
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                    
      
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jComboBox1 = new javax.swing.JComboBox<>();
        displaySingle2 = new eu.hansolo.steelseries.gauges.DisplaySingle();
        radial2Lcd1 = new eu.hansolo.steelseries.gauges.Radial2Lcd();
        jLabel2 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        displaySingle1 = new eu.hansolo.steelseries.gauges.DisplaySingle();
        jLabel1 = new javax.swing.JLabel();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton6 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        radial1Square1 = new eu.hansolo.steelseries.gauges.Radial1Square();
        displayCircular1 = new eu.hansolo.steelseries.gauges.DisplayCircular();
        displayCircular2 = new eu.hansolo.steelseries.gauges.DisplayCircular();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField2 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jTextField1 = new javax.swing.JTextField();
        jToggleButton7 = new javax.swing.JToggleButton();
        jToggleButton8 = new javax.swing.JToggleButton();
        jToggleButton9 = new javax.swing.JToggleButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setBackground(new java.awt.Color(163, 181, 228));
        setForeground(new java.awt.Color(211, 36, 36));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        radial2Lcd1.setMaxValue(150.0);
        radial2Lcd1.setTitle("Velocimetro");
        radial2Lcd1.setUnitString("Km/h");
        getContentPane().add(radial2Lcd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(259, 12, -1, 200));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(232, 27, 27));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("APAGADO");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(564, 12, 179, 49));

        jToggleButton1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jToggleButton1.setForeground(new java.awt.Color(29, 221, 72));
        jToggleButton1.setText("ENCENDER");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(582, 67, 151, 56));

        jToggleButton2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jToggleButton2.setText("ACELERAR");
        jToggleButton2.setEnabled(false);
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 360, -1, -1));

        jToggleButton3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jToggleButton3.setText("FRENAR");
        jToggleButton3.setEnabled(false);
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 402, 98, -1));

        displaySingle1.setUnitString("Km/h");
        getContentPane().add(displaySingle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(286, 218, 143, -1));

        jLabel1.setForeground(new java.awt.Color(33, 33, 33));
        jLabel1.setText("Velocidad Almacenada");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 272, 165, -1));

        jToggleButton5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jToggleButton5.setText("MANTENER");
        jToggleButton5.setEnabled(false);
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 444, -1, -1));

        jToggleButton6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jToggleButton6.setText("REINICAR");
        jToggleButton6.setEnabled(false);
        jToggleButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 486, 102, -1));

        jToggleButton4.setBackground(new java.awt.Color(220, 223, 67));
        jToggleButton4.setText("REPOSTAR");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 218, 134, 47));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(new javax.swing.border.MatteBorder(null));
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 319, 403, 218));

        radial1Square1.setTitle("Combustible");
        radial1Square1.setUnitString("Litros");
        getContentPane().add(radial1Square1, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 12, -1, -1));

        displayCircular1.setUnitString("Km");
        displayCircular1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(displayCircular1, new org.netbeans.lib.awtextra.AbsoluteConstraints(664, 164, -1, -1));

        displayCircular2.setUnitString("Km");
        getContentPane().add(displayCircular2, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 164, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 323, 317, 31));

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(61, 32, 3));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 540, 20, 20));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 530, 40, 10));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(149, 140, 132));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 360, 40, 210));

        jToggleButton7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jToggleButton7.setText("Cambiar Aceite");
        jToggleButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 360, -1, 30));

        jToggleButton8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jToggleButton8.setText("Cambiar Frenos");
        jToggleButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 400, -1, -1));

        jToggleButton9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jToggleButton9.setText("Revision General");
        jToggleButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 440, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if(jToggleButton1.isSelected()){
            if(g.getState() == Thread.State.RUNNABLE) {
                ((Thread)g).start();
            }
            jTextArea1.removeAll();
            radial2Lcd1.setValueAnimated(g.s.getVelocidadLineal());
            /*jLabel12.setText(Double.toString(g.s.getVelocidadLineal()));
            jLabel8.setText(Double.toString(g.s.getContador_reciente()));
            jLabel10.setText(Double.toString(g.s.getContador_total()));
            jLabel14.setText(Double.toString(g.s.getRpm()));*/

            jLabel2.setText("ENCENDIDO");
            jLabel2.setForeground(Color.green);
            
            jToggleButton1.setText("APAGAR");
            jToggleButton1.setForeground(Color.red);

            jToggleButton2.setEnabled(true);
            jToggleButton3.setEnabled(true);
            jToggleButton4.setEnabled(false);
            jToggleButton5.setEnabled(false);
            jToggleButton6.setEnabled(false);
            jToggleButton7.setEnabled(false);
            jToggleButton8.setEnabled(false);
            jToggleButton9.setEnabled(false);
            
            radial1Square1.setValueAnimated(g.s.getGasolina());
            

        }
        else{
            jLabel2.setText("APAGADO");
            jLabel2.setForeground(Color.red);

            jToggleButton1.setText("ENCENDER");
            jToggleButton1.setForeground(Color.green);

            jToggleButton2.setEnabled(false);
            jToggleButton3.setEnabled(false);
            jToggleButton4.setEnabled(false);
            jToggleButton5.setEnabled(false);
            jToggleButton6.setEnabled(false);
            g.peticionFiltros(EstadoMotor.APAGADO);

            radial2Lcd1.setValueAnimated(g.s.getVelocidadLineal());
            
            radial1Square1.setValueAnimated(0);
            if (g.s.getGasolina() <= 25) {
                jTextArea1.removeAll();
                jToggleButton4.setEnabled(true);
            }
            if(g.s.getAceite()){
                jTextArea1.removeAll();
                jToggleButton7.setEnabled(true);
            }
            if(g.s.getFrenos()){
                jTextArea1.removeAll();
                jToggleButton8.setEnabled(true);
            }
            if(g.s.getRevision()){
                jTextArea1.removeAll();
                jToggleButton9.setEnabled(true);
            }
            
            
        }

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
    new Thread(){

            public void run() {
                while (jToggleButton2.isSelected()) {
                    
                    jTextField2.setLocation(680, 370);
                    jToggleButton1.setEnabled(false);
                    jToggleButton3.setEnabled(false);
                    
                    jToggleButton5.setEnabled(true);
                    jToggleButton2.setText("ACELERANDO");

                    if (!mantener) {
                        g.peticionFiltros(EstadoMotor.ACELERANDO);
                        radial1Square1.setValueAnimated(g.s.getGasolina());
                        if (g.s.getGasolina() <= 25) {
                            jTextArea1.setText("Deposito al 25%. Reposte lo antes posible.\n");
                        }
                        if(g.s.getAceite() == true){
                            jTextArea1.append("Cambiar de aceite\n");
                        }
                        if(g.s.getFrenos() == true){
                            jTextArea1.append("Cambiar las pastillas de los frenos \n");
                        }
                        if(g.s.getRevision() == true){
                            jTextArea1.append("NECESITAS UNA REVISION");
                        }
                        
                    } else {
                        g.peticionFiltros(EstadoMotor.ANDANDO);
                        radial1Square1.setValueAnimated(g.s.getGasolina());
                        if (g.s.getGasolina() <= 25) {
                            jTextArea1.setText("Deposito al 25%. Reposte lo antes posible.");
                        }
                        if(g.s.getAceite() == true){
                            jTextArea1.append("Cambiar de aceite\n");
                        }
                        if(g.s.getFrenos() == true){
                            jTextArea1.append("Cambiar las pastillas de los frenos \n");
                        }
                        if(g.s.getRevision() == true){
                            jTextArea1.append("NECESITAS UNA REVISION");
                        }
                    }
                    radial2Lcd1.setValueAnimated(g.s.getVelocidadLineal());
                    displayCircular2.setValueAnimated(g.s.getContador_reciente());
                    displayCircular1.setValueAnimated(g.s.getContador_total());
                    
                    try {
                        Thread.sleep(800);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(SPMT.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        }.start();
    new Thread(){
        public void run(){
            while(!jToggleButton2.isSelected() && !jToggleButton3.isSelected() && !reiniciar){
                jToggleButton5.setEnabled(false);
                if(!mantener){
                    g.peticionFiltros(EstadoMotor.ENCENDIDO);
                }
                else
                    g.peticionFiltros(EstadoMotor.ANDANDO);
                
                radial1Square1.setValueAnimated(g.s.getGasolina());
                radial2Lcd1.setValueAnimated(g.s.getVelocidadLineal()); 
                displayCircular2.setValueAnimated(g.s.getContador_reciente());
                displayCircular1.setValueAnimated(g.s.getContador_total());
                if (g.s.getGasolina() <= 25) {
                    jTextArea1.setText("Deposito al 25%. Reposte lo antes posible.");
                }
                if(g.s.getAceite() == true){
                    jTextArea1.append("Cambiar de aceite\n");
                }
                if(g.s.getFrenos() == true){
                    jTextArea1.append("Cambiar las pastillas de los frenos \n");
                }
                if(g.s.getRevision() == true){
                    jTextArea1.append("NECESITAS UNA REVISION");
                }    

                
                try {
                    Thread.sleep(800);
                } catch (InterruptedException ex) {
                    Logger.getLogger(SPMT.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }
    }.start();
    if (!jToggleButton2.isSelected()){
        jToggleButton1.setEnabled(true);
        jToggleButton3.setEnabled(true);
        jToggleButton2.setText("ACELERAR");
    }

    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        new Thread(){

            public void run(){
                while(jToggleButton3.isSelected()){
                    jTextField2.setLocation(680, 410);
                    jToggleButton1.setEnabled(false);
                    jToggleButton5.setEnabled(false);
                    jToggleButton3.setText("FRENANDO");
                    g.peticionFiltros(EstadoMotor.FRENANDO);
                    jToggleButton2.setEnabled(false);
                    
                    radial2Lcd1.setValueAnimated(g.s.getVelocidadLineal());
                    displayCircular2.setValueAnimated(g.s.getContador_reciente());
                    displayCircular1.setValueAnimated(g.s.getContador_total());
                    radial1Square1.setValueAnimated(g.s.getGasolina());
                    
                    if (g.s.getGasolina() <= 25) {
                        jTextArea1.setText("Deposito al 25%. Reposte lo antes posible.");
                    }
                    if(g.s.getAceite() == true){
                        jTextArea1.append("Cambiar de aceite\n");
                    }
                    if(g.s.getFrenos() == true){
                        jTextArea1.append("Cambiar las pastillas de los frenos \n");
                    }
                    if(g.s.getRevision() == true){
                        jTextArea1.append("NECESITAS UNA REVISION");
                    }
                    
                    try {
                        Thread.sleep(800);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(SPMT.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        }.start();
        if (!jToggleButton3.isSelected()){
            jToggleButton1.setEnabled(true);
            jToggleButton3.setText("FRENAR");
            jToggleButton2.setEnabled(true);
        }
        new Thread(){
        public void run(){
            while(!jToggleButton2.isSelected() && !jToggleButton3.isSelected() && !reiniciar){
                jToggleButton5.setEnabled(false);
                g.peticionFiltros(EstadoMotor.ENCENDIDO);
                
                radial2Lcd1.setValueAnimated(g.s.getVelocidadLineal());
                displayCircular2.setValueAnimated(g.s.getContador_reciente());
                displayCircular1.setValueAnimated(g.s.getContador_total());
                radial1Square1.setValueAnimated(g.s.getGasolina());
                if (g.s.getGasolina() <= 25) {
                    jTextArea1.setText("Deposito al 25%. Reposte lo antes posible.");
                }
                if(g.s.getAceite() == true){
                    jTextArea1.append("Cambiar de aceite\n");
                }
                if(g.s.getFrenos() == true){
                    jTextArea1.append("Cambiar las pastillas de los frenos \n");
                }
                if(g.s.getRevision() == true){
                    jTextArea1.append("NECESITAS UNA REVISION");
                }
                
                try {
                    Thread.sleep(800);
                } catch (InterruptedException ex) {
                    Logger.getLogger(SPMT.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        }.start();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        if (!mantener) {
            mantener = true;
            velocidad_almacenada = g.s.getVelocidadLineal();
            displaySingle1.setValue(velocidad_almacenada);
            jToggleButton6.setEnabled(true);
            radial1Square1.setValueAnimated(g.s.getGasolina());
            displayCircular2.setValueAnimated(g.s.getContador_reciente());
            displayCircular1.setValueAnimated(g.s.getContador_total());
            if (g.s.getGasolina() <= 25) {
                jTextArea1.setText("Deposito al 25%. Reposte lo antes posible.");
            }
            if(g.s.getAceite() == true){
                jTextArea1.append("Cambiar de aceite\n");
            }
            if(g.s.getFrenos() == true){
                jTextArea1.append("Cambiar las pastillas de los frenos \n");
            }
            if(g.s.getRevision() == true){
                jTextArea1.append("NECESITAS UNA REVISION");
            }
        } else {
            jTextField2.setLocation(680, 450);
            mantener = false;
            displayCircular2.setValueAnimated(g.s.getContador_reciente());
            displayCircular1.setValueAnimated(g.s.getContador_total());
            radial1Square1.setValueAnimated(g.s.getGasolina());
            jToggleButton2.doClick();
            if (g.s.getGasolina() <= 25) {
                jTextArea1.setText("Deposito al 25%. Reposte lo antes posible.");
            }
            if(g.s.getAceite() == true){
                jTextArea1.append("Cambiar de aceite\n");
            }
            if(g.s.getFrenos() == true){
                jTextArea1.append("Cambiar las pastillas de los frenos \n");
            }
            if(g.s.getRevision() == true){
                jTextArea1.append("NECESITAS UNA REVISION");
            }
        }
        if (mantener && jToggleButton2.isSelected()) {
            radial1Square1.setValueAnimated(g.s.getGasolina());
            if (g.s.getGasolina() <= 25) {
                jTextArea1.setText("Deposito al 25%. Reposte lo antes posible.");
            }
            if(g.s.getAceite() == true){
                jTextArea1.append("Cambiar de aceite\n");
            }
            if(g.s.getFrenos() == true){
                jTextArea1.append("Cambiar las pastillas de los frenos \n");
            }
            if(g.s.getRevision() == true){
                jTextArea1.append("NECESITAS UNA REVISION");
            }
        }
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jToggleButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton6ActionPerformed
        
        if(!reiniciar)
            reiniciar = true;
        else
            reiniciar = false;
        
        new Thread(){

            public void run(){

                while(jToggleButton6.isSelected()){
                    jTextField2.setLocation(680, 490);
                    radial1Square1.setValueAnimated(g.s.getGasolina());
                    jToggleButton5.setEnabled(true);
                    jToggleButton6.setText("REINICIANDO");
                    if(g.s.getVelocidadLineal() < velocidad_almacenada){
                        g.peticionFiltros(EstadoMotor.ACELERANDO);
                        alcanzado1 = true;
                    }
                    else if(g.s.getVelocidadLineal() > velocidad_almacenada){
                        g.peticionFiltros(EstadoMotor.FRENANDO);
                        alcanzado2 = true;
                    }
                    if (alcanzado1 && alcanzado2){
                        jTextField2.setLocation(680, 490);
                        radial1Square1.setValueAnimated(g.s.getGasolina());
                        g.s.setVelocidadLineal(velocidad_almacenada);
                        jToggleButton6.doClick();
                        jToggleButton5.doClick();
                        jToggleButton2.doClick();
                        alcanzado1 = false;
                        alcanzado2 = false;
                        reiniciar = false;
                        
                        
                    }
                    
                    if (g.s.getGasolina() <= 25) {
                        jTextArea1.setText("Deposito al 25%. Reposte lo antes posible.");
                    }
                    radial1Square1.setValueAnimated(g.s.getGasolina());
                    radial2Lcd1.setValueAnimated(g.s.getVelocidadLineal());
                    displayCircular2.setValueAnimated(g.s.getContador_reciente());
                    displayCircular1.setValueAnimated(g.s.getContador_total());

                    try {
                        Thread.sleep(800);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(SPMT.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        }.start();
    }//GEN-LAST:event_jToggleButton6ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // TODO add your handling code here:
        new Thread(){
            public void run(){
                
                
                if(jToggleButton4.isEnabled()){
                    jTextArea1.removeAll();
                    jTextArea1.setText("Repostando. Espere...");

                    try {
                        Thread.sleep(6000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(SPMT.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    g.s.setGasolina(100);
                    
                    jTextArea1.removeAll();
                    jTextArea1.setText("Tanque lleno al 100%!!!");
                    
                }
            }
        }.start();
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jToggleButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton7ActionPerformed
        new Thread(){
            public void run(){
                
                
                if(jToggleButton7.isEnabled()){
                    jTextArea1.removeAll();
                    jTextArea1.setText("Cambiando el Aceite. Espere...");

                    try {
                        Thread.sleep(6000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(SPMT.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    g.s.setAceite(false);
                    
                    jTextArea1.removeAll();
                    jTextArea1.setText("Aceite cambiado satisfactoriamente");
                    
                }
            }
        }.start();
    }//GEN-LAST:event_jToggleButton7ActionPerformed

    private void jToggleButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton8ActionPerformed
        new Thread(){
            public void run(){
                
                
                if(jToggleButton8.isEnabled()){
                    jTextArea1.removeAll();
                    jTextArea1.setText("Cambiando las pastillas de los frenos. Espere...");

                    try {
                        Thread.sleep(6000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(SPMT.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    g.s.setFrenos(false);
                    
                    jTextArea1.removeAll();
                    jTextArea1.setText("Pastillas de los frenos cambiados satisfactoriamente");
                    
                }
            }
        }.start();
    }//GEN-LAST:event_jToggleButton8ActionPerformed

    private void jToggleButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton9ActionPerformed
        new Thread(){
            public void run(){
                
                
                if(jToggleButton9.isEnabled()){
                    jTextArea1.removeAll();
                    jTextArea1.setText("Haciendo una revision total del vehículo. Espere...");

                    try {
                        Thread.sleep(6000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(SPMT.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    g.s.setRevision(false);
                    
                    jTextArea1.removeAll();
                    jTextArea1.setText("Revision completa del automovil");
                    
                }
            }
        }.start();
    }//GEN-LAST:event_jToggleButton9ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private eu.hansolo.steelseries.gauges.DisplayCircular displayCircular1;
    private eu.hansolo.steelseries.gauges.DisplayCircular displayCircular2;
    private eu.hansolo.steelseries.gauges.DisplaySingle displaySingle1;
    private eu.hansolo.steelseries.gauges.DisplaySingle displaySingle2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    private javax.swing.JToggleButton jToggleButton7;
    private javax.swing.JToggleButton jToggleButton8;
    private javax.swing.JToggleButton jToggleButton9;
    private eu.hansolo.steelseries.gauges.Radial1Square radial1Square1;
    private eu.hansolo.steelseries.gauges.Radial2Lcd radial2Lcd1;
    // End of variables declaration//GEN-END:variables
}
